/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

// Base Layers
#define BASE    0
#define GAM     1

// Upper Layers
#define NAV     2
#define MSE     3
#define NUM     4
#define MED     5
#define FUN     6

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

#include "./custom_behaviors.dtsi"

&mt {
  flavor = "tap-preferred";
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

/ {
  combos {
    compatible = "zmk,combos";
    combo_caps_word {
      timeout-ms = <50>;
      key-positions = <16 19>;
      bindings = <&caps_word>;
      layers = <BASE>;
    };

    combo_reset {
      timeout-ms = <50>;
      key-positions = <16 19 38 39>;
      bindings = <&sys_reset>;
    };

    combo_bootloader {
      timeout-ms = <50>;
      key-positions = <17 18 38 39>;
      bindings = <&bootloader>;
    };
  };
};

/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &none   &kp Q        &kp W        &kp E         &kp R           &kp T            &kp Y         &kp U           &kp I         &kp O        &kp P           &none
        &none   &mt LGUI A   &mt LALT S   &mt LSHFT D   &mt LCTRL F     &kp G            &kp H         &mt RCTRL J     &mt RSHFT K   &mt RALT L   &mt RGUI SQT    &none
        &none   &kp Z        &kp X        &kp C         &kp V           &kp B            &kp N         &kp M           &kp COMMA     &kp DOT      &kp FSLH        &none
                                          &lt NAV DEL   &lt NUM BSPC    &lt MSE RET      &kp TAB       &lt FUN SPACE   &lt MED ESC
      >;
    };

    gaming_layer {
      bindings = <
        &kp ESC     &kp Q   &kp W   &kp E       &kp R      &kp T          &kp Y     &kp U     &kp I          &kp O     &kp P      &kp MINUS
        &kp TAB     &kp A   &kp S   &kp D       &kp F      &kp G          &kp H     &kp J     &kp K          &kp L     &kp SQT    &mo FUN
        &kp LSHFT   &kp Z   &kp X   &kp C       &kp V      &kp B          &kp N     &kp M     &kp COMMA      &kp DOT   &kp FSLH   &to_BASE
                                    &kp LCTRL   &kp SPACE  &kp LALT       &kp RET   &mo NAV   &mo MED
      >;
    };

    navigation_layer {
      bindings = <
        &none  &none      &none      &to_GAM     &to_BASE    &none        &kp K_PASTE  &kp K_COPY   &kp K_CUT   &kp K_UNDO  &kp K_REDO   &none
        &none  &kp LGUI   &kp LALT   &kp LSHFT   &kp LCTRL   &none        &kp LEFT     &kp DOWN     &kp UP      &kp RIGHT   &kp CLCK     &none
        &none  &none      &none      &to_MED     &none       &none        &kp HOME     &kp PG_DN    &kp PG_UP   &kp END     &kp INS      &none
                                     &kp DEL     &kp BSPC    &kp RET      &none        &none        &none
      >;
    };

    mouse_layer {
      bindings = <
        &none   &none      &none      &to_GAM     &to_BASE    &none          &kp K_PASTE      &kp K_COPY       &kp K_CUT      &kp K_UNDO        &kp K_REDO   &none
        &none   &kp LGUI   &kp LALT   &kp LSHFT   &kp LCTRL   &none          &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_UP   &mmv MOVE_RIGHT   &none        &none
        &none   &none      &none      &none       &none       &none          &msc SCRL_LEFT   &msc SCRL_DOWN   &msc SCRL_UP   &msc SCRL_RIGHT   &none        &none
                                      &none       &none       &none          &mkp RCLK        &mkp LCLK        &mkp MCLK
      >;
    };

    number_layer {
      bindings = <
         &none   &none      &none      &to_GAM     &to_BASE    &none      &kp LBKT    &kp N7   &kp N8   &kp N9   &kp RBKT    &none
         &none   &kp LGUI   &kp LALT   &kp LSHFT   &kp LCTRL   &none      &kp EQUAL   &kp N4   &kp N5   &kp N6   &kp SEMI    &none
         &none   &none      &none      &to_FUN     &none       &none      &kp BSLH    &kp N1   &kp N2   &kp N3   &kp GRAVE   &none
                                       &none       &none       &none      &kp MINUS   &kp N0   &kp DOT
      >;
    };

    media_layer {
      bindings = <
        &none   &none           &none           &none           &none           &bt_clr_all      &none   &to_BASE    &to_GAM     &none      &none   &none
        &none   &kp C_PREV      &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT      &bt_clr          &none   &kp RCTRL   &kp RSHFT   &kp RALT   &kp RGUI   &none
        &none   &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &out_tog         &none   &none       &to_NAV     &none      &none      &none
                                                &kp C_MUTE      &kp C_PP        &none            &none   &none       &none
      >;
    };

    fn_layer {
      bindings = <
        &none   &kp F12  &kp F7   &kp F8   &kp F9   &kp PSCRN            &none   &to_BASE    &to_GAM     &none      &none      &none
        &none   &kp F11  &kp F4   &kp F5   &kp F6   &kp SLCK             &none   &kp RCTRL   &kp RSHFT   &kp RALT   &kp RGUI   &none
        &none   &kp F10  &kp F1   &kp F2   &kp F3   &kp PAUSE_BREAK      &none   &none       &to_NUM     &none      &none      &none
                                  &kp DEL  &kp BSPC &kp RET              &none   &none       &none
      >;
    };
  };
};
