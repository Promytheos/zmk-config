/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT    0
#define NUMBER     1
#define SYMBOL     2
#define FUNCTION   3
#define MO_TOG(layer) &mo_tog layer layer

&mt {
  flavor = "tap-preferred";
};

/ {
        behaviors {
            mo_tog: behavior_mo_tog {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "hold-preferred";
                tapping-term-ms = <200>;
                bindings = <&mo>, <&tog>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  RET |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  '   |
//                    | FUN | NUM | SPC |   | SPC | SYM  | ALT |
                        bindings = <
   &gresc    &kp Q      &kp W      &kp E             &kp R             &kp T           &kp Y      &kp U        &kp I       &kp O       &kp P          &kp BSPC
   &kp TAB   &mt LGUI A &mt LALT S &mt LSHFT D       &mt LCTRL F       &kp G           &kp H      &mt RCTRL J  &mt RSHFT K &mt RALT L  &mt RGUI SEMI  &kp SQT 
   &kp LSHFT &kp Z      &kp X      &kp C             &kp V             &kp B           &kp N      &kp M        &kp COMMA   &kp DOT     &kp FSLH       &kp RET
                                   MO_TOG(FUNCTION)  MO_TOG(NUMBER)    &kp SPACE       &kp SPACE  &mo SYMBOL   &kp RALT
                        >;
                };
                number_layer {
// -----------------------------------------------------------------------------------------
// | ESC |     |     |     |     |     |   |  7  |  8  |  9  |  -  |  /  | BKSP |
// | TAB |     |     |     |     |     |   |  4  |  5  |  6  |  +  |  *  |      |
// |     |     |     |     |     |     |   |  1  |  2  |  3  |     |     | ENT  |
//                   |     |     | SPC |   | SPC |  0  |  .  |
                        bindings = <
   &gresc  &trans &trans &trans &trans &trans      &kp N7     &kp N8   &kp N9   &kp MINUS &trans     &kp BSPC
   &kp TAB &trans &trans &trans &trans &trans      &kp N4     &kp N5   &kp N6   &kp EQUAL &kp ASTRK  &trans
   &trans  &trans &trans &trans &trans &trans      &kp N1     &kp N2   &kp N3   &kp FSLH  &trans     &kp RET
                         &trans &trans &kp SPACE   &kp SPACE  &kp N0   &kp DOT
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                fn_layer {
// -----------------------------------------------------------------------------------------
// |  F1      |  F2   |  F3    | F4  | F5  | F6  |   | F7  | F8   | F9    | F10  | F11  | F12      |
// | BTCLR    | BT1   | BT2    | BT3 | BT4 | BT5 |   | LFT | DWN  | UP    | RGT  |      | VOL UP   |
// | BTCLRALL | EP_ON | EP_OFF |     |     |     |   |     | PREV | PAUSE | NEXT | MUTE | VOL DOWN |
//                             | GUI |     | SPC |   | ENT |      | ALT   |
                        bindings = <
   &kp F1         &kp F2            &kp F3             &kp F4       &kp F5       &kp F6           &kp F7   &kp F8     &kp F9   &kp F10    &kp F11    &kp F12
   &bt BT_CLR     &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp LEFT &kp DOWN   &kp UP   &kp RIGHT  &trans     &kp C_VOL_UP
   &bt BT_CLR_ALL &ext_power EP_ON  &ext_power EP_OFF  &trans       &trans       &trans           &trans   &kp C_PREV &kp C_PP &kp C_NEXT &kp C_MUTE &kp C_VOL_DN
                                                       &kp LGUI     &trans       &kp SPACE        &kp RET  &trans     &kp RALT
                        >;
                };
        };
};
